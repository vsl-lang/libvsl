private func puts(string: CString) -> Int32 external(puts)


// Prints a string to STDOUT with a trailing newline.
@inline
public func print(string: String) {
    print(ByteSequence::string.underlyingData)
}

// Prints a null-terminated byte sequence to STDOUT with a trailing newline.
@inline
public func print(byteSequence: ByteSequence) {
    puts(byteSequence)
}

// Prints a boolean as either `true` or `false`
@inline
public func print(bool: Bool) {
    if bool {
        puts(`true`)
    } else {
        puts(`false`)
    }
}

// Prints an unsigned 8-bit integer.
public func print(integer: UInt8) {
    puts(integer.toString(base: 10))
}

// Prints a signed 8-bit integer.
public func print(integer: Int8) {
    puts(integer.toString(base: 10))
}

// Prints an unsigned 16-bit integer.
public func print(integer: UInt16) {
    puts(integer.toString(base: 10))
}

// Prints a signed 16-bit integer.
public func print(integer: Int16) {
    puts(integer.toString(base: 10))
}

// Prints an unsigned 32-bit integer.
public func print(integer: UInt32) {
    puts(integer.toString(base: 10))
}

// Prints a signed 32-bit integer.
public func print(integer: Int32) {
    puts(integer.toString(base: 10))
}

// Prints an unsigned 64-bit integer.
public func print(integer: UInt64) {
    puts((UInt32::integer).toString(base: 10))
}

// Prints a signed 64-bit integer.
public func print(integer: Int64) {
    puts((UInt32::integer).toString(base: 10))
}

// Prints a floating point value
public func print(float: Float) {
    puts(`<<Float>>`)
}

// Prints a double-precision floating point value
public func print(double: Double) {
    puts(`<<Double>>`)
}
