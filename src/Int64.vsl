// Represents a 64-bit signed integer. This is the default integer type on
// 64-bit systems.
@primitive(Integer) @mock(i64) public class Int64 {

    @backend(llvm)
    @inline
    public static func +(lhs: Int64, rhs: Int64) -> Int64 native(iadd)

    @backend(llvm)
    @inline
    public static func -(lhs: Int64, rhs: Int64) -> Int64 native(isub)

    @backend(llvm)
    @inline
    public static func *(lhs: Int64, rhs: Int64) -> Int64 native(imul)

    @backend(llvm)
    @inline
    public static func /(lhs: Int64, rhs: Int64) -> Double native(idiv)

    @backend(llvm)
    @inline
    public static func %(lhs: Int64, rhs: Int64) -> Int64 native(irem)

    @backend(llvm)
    @inline
    public static func ==(lhs: Int64, rhs: Int64) -> Bool native(ieq)

    @backend(llvm)
    @inline
    public static func !=(lhs: Int64, rhs: Int64) -> Bool native(ineq)

    @backend(llvm)
    @inline
    public static func >=(lhs: Int64, rhs: Int64) -> Bool native(ige)

    @backend(llvm)
    @inline
    public static func <=(lhs: Int64, rhs: Int64) -> Bool native(ile)

    @backend(llvm)
    @inline
    public static func >(lhs: Int64, rhs: Int64) -> Bool native(igt)

    @backend(llvm)
    @inline
    public static func <(lhs: Int64, rhs: Int64) -> Bool native(ilt)

}
