@primitive(Integer)
@mock(ui8)
public class UInt8 {

    @backend(llvm)
    @inline
    public static func +(lhs: UInt8, rhs: UInt8) -> UInt8 native(iadd)

    @backend(llvm)
    @inline
    public static func -(lhs: UInt8, rhs: UInt8) -> UInt8 native(isub)

    @backend(llvm)
    @inline
    public static func *(lhs: UInt8, rhs: UInt8) -> UInt8 native(imul)

    @backend(llvm)
    @inline
    public static func /(lhs: UInt8, rhs: UInt8) -> Double native(uidiv)

    @backend(llvm)
    @inline
    public static func %(lhs: UInt8, rhs: UInt8) -> UInt8 native(uirem)

    @backend(llvm)
    @inline
    public static func ==(lhs: UInt8, rhs: UInt8) -> Bool native(ieq)

    @backend(llvm)
    @inline
    public static func !=(lhs: UInt8, rhs: UInt8) -> Bool native(ineq)

    @backend(llvm)
    @inline
    public static func >=(lhs: UInt8, rhs: UInt8) -> Bool native(uige)

    @backend(llvm)
    @inline
    public static func <=(lhs: UInt8, rhs: UInt8) -> Bool native(uile)

    @backend(llvm)
    @inline
    public static func >(lhs: UInt8, rhs: UInt8) -> Bool native(uigt)

    @backend(llvm)
    @inline
    public static func <(lhs: UInt8, rhs: UInt8) -> Bool native(uilt)

}
